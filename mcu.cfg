

######################################################### \
#### User MCU and TMCs wiring definition file ###########  + --> Everything MCU related :)
######################################################### /

# This file is yours: keep in mind that it will not be erased when updating
# the config using moonraker and it will be kept as you've set it.

# Put here all your wiring definitions, your MCU serial port, CANbus UUID, etc...
# It should be populated automatically with some default wiring templates during
# the first time install of the config if you choose to do so when asked by the
# script. If it's not the case, you will need to manually define all your
# [board_pins] section. You can use the pinout documentation here: ./docs/pinout.md

# ------------------------------------------------------------------------------------------


#-------------------------#
#   TMCs DRIVERS          #
#-------------------------#

# ---------------------------------------------------------------------- AXIS DRIVERS ----> optional, but only one line per axis need to be selected
### 1. X Drivers -------------------------------------------------------------------------
[include config/hardware/axis/X/TMC/TMC2209.cfg]
# [include config/hardware/axis/X/TMC/TMC2209_V0specific.cfg] # Should only be used for early LDO V0 kits to mitigate the known VFAs issue
# [include config/hardware/axis/X/TMC/TMC2240.cfg]
# [include config/hardware/axis/X/TMC/TMC5160.cfg]
### 2. Y Drivers -------------------------------------------------------------------------
[include config/hardware/axis/Y/TMC/TMC2209.cfg]
# [include config/hardware/axis/Y/TMC/TMC2209_V0specific.cfg] # Should only be used for early LDO V0 kits to mitigate the known VFAs issue
# [include config/hardware/axis/Y/TMC/TMC2240.cfg]
# [include config/hardware/axis/Y/TMC/TMC5160.cfg]
### 3. Z Drivers -------------------------------------------------------------------------
# [include config/hardware/axis/Z/TMC/TMC2209_1-Motor.cfg]
# [include config/hardware/axis/Z/TMC/TMC2209_3-Motors.cfg]
[include config/hardware/axis/Z/TMC/TMC2209_4-Motors.cfg]
# [include config/hardware/axis/Z/TMC/TMC2240_1-Motor.cfg]
# [include config/hardware/axis/Z/TMC/TMC2240_3-Motors.cfg]
# [include config/hardware/axis/Z/TMC/TMC2240_4-Motors.cfg]
# ----------------------------------------------------------------------------------------


# ------------------------------------------------------------------- EXTRUDER DRIVER ----> optional, but only one line need to be selected
### --------------------------------------------------------------------------------------
[include config/hardware/extruder/TMC/TMC2209.cfg]
# [include config/hardware/extruder/TMC/TMC2240.cfg]
# ----------------------------------------------------------------------------------------


#--------------------------------------#
#### BTT Octopus MCU definition ########
#--------------------------------------#

[mcu]
##--------------------------------------------------------------------
# This board work by using a serial connection by default. If you
# want to use CAN, invert the commented lines and use canbus_uuid.

serial: /dev/serial/by-id/usb-Klipper_stm32f446xx_380049001250535556323420-if00
# canbus_uuid: change-me-to-the-correct-canbus-id
##--------------------------------------------------------------------

[include config/mcu_definitions/main/BTT_Octopus.cfg] # Do not remove this line
[board_pins octopus_mcu]
mcu: mcu
aliases:
    X_STEP=MCU_MOTOR0_STEP   , X_DIR=MCU_MOTOR0_DIR   , X_ENABLE=MCU_MOTOR0_ENABLE   , X_TMCUART=MCU_MOTOR0_UART   ,
    Y_STEP=MCU_MOTOR1_STEP   , Y_DIR=MCU_MOTOR1_DIR   , Y_ENABLE=MCU_MOTOR1_ENABLE   , Y_TMCUART=MCU_MOTOR1_UART   ,

    Z_STEP=MCU_MOTOR2_1_STEP , Z_DIR=MCU_MOTOR2_1_DIR , Z_ENABLE=MCU_MOTOR2_1_ENABLE , Z_TMCUART=MCU_MOTOR2_1_UART ,
    Z1_STEP=MCU_MOTOR3_STEP  , Z1_DIR=MCU_MOTOR3_DIR  , Z1_ENABLE=MCU_MOTOR3_ENABLE  , Z1_TMCUART=MCU_MOTOR3_UART  ,
    Z2_STEP=MCU_MOTOR4_STEP  , Z2_DIR=MCU_MOTOR4_DIR  , Z2_ENABLE=MCU_MOTOR4_ENABLE  , Z2_TMCUART=MCU_MOTOR4_UART  ,
    Z3_STEP=MCU_MOTOR5_STEP  , Z3_DIR=MCU_MOTOR5_DIR  , Z3_ENABLE=MCU_MOTOR5_ENABLE  , Z3_TMCUART=MCU_MOTOR5_UART  ,

    E_STEP=MCU_MOTOR6_STEP   , E_DIR=MCU_MOTOR6_DIR   , E_ENABLE=MCU_MOTOR6_ENABLE   , E_TMCUART=MCU_MOTOR6_UART   ,

    # DRIVER_SPI_MOSI=EXP2_6 , # Used in case of SPI drivers such as TMC2240 or TMC5160
    # DRIVER_SPI_MISO=EXP2_1 , # Used in case of SPI drivers such as TMC2240 or TMC5160
    # DRIVER_SPI_SCK=EXP2_2  , # Used in case of SPI drivers such as TMC2240 or TMC5160

    X_STOP=MCU_STOP0 , Y_STOP=MCU_STOP1 , Z_STOP=MCU_STOP2 ,
    PROBE_INPUT=MCU_STOP7  ,
    RUNOUT_SENSOR=MCU_STOP3 ,

    E_HEATER=MCU_HE0   , E_TEMPERATURE=MCU_T0   ,
    BED_HEATER=MCU_BED0 , BED_TEMPERATURE=MCU_TB ,

    PART_FAN=MCU_FAN0 , E_FAN=MCU_FAN1 ,
    CONTROLLER_FAN=MCU_FAN2        ,
    EXHAUST_FAN=MCU_FAN4           ,
    FILTER_FAN=MCU_FAN3            ,
    HOST_CONTROLLER_FAN=MCU_FAN2   ,

    CHAMBER_TEMPERATURE=MCU_T1 , ELECTRICAL_CABINET_TEMPERATURE=MCU_T2 ,

    LIGHT_OUTPUT=MCU_FAN5         ,
    LIGHT_NEOPIXEL=MCU_STOP5     ,
    STATUS_NEOPIXEL=MCU_NEOPIXEL ,

    SERVO_PIN=MCU_SERVOS ,


#---------------------------------------------------------#
#### BTT EBB SB2209 CAN v1.0 RP2040 MCU definition ########
#---------------------------------------------------------#

[mcu toolhead]
##--------------------------------------------------------------------
canbus_uuid: 2b271a7a9356
##--------------------------------------------------------------------

# If you want to override the wiring of the BTT EBB SB2209 CAN v1.0 RP2040, keep in mind that this
# board is defined using the "toolhead" name. So you should use "pin: toolhead:PIN_NAME"
# in your own overrides.cfg files.

[include config/mcu_definitions/toolhead/BTT_SB2209_RP2040_v1.0.cfg] # Do not remove this line
[board_pins sb2209_mcu]
mcu: toolhead
aliases:
    E_STEP=MCU_E0_STEP , E_DIR=MCU_E0_DIR , E_ENABLE=MCU_E0_EN , E_TMCUART=MCU_E0_UART ,

    X_STOP=MCU_ENDSTOP ,
    PROBE_INPUT=MCU_PROBE2 ,
    TOOLHEAD_SENSOR=MCU_PROBE2 ,

    E_HEATER=MCU_HE0 , E_TEMPERATURE=MCU_TH0 , CHAMBER_TEMPERATURE=MCU_ONBOARD_NTCK100K ,

    PART_FAN=MCU_FAN2_PWM , E_FAN=MCU_FAN1_PWM ,

    STATUS_NEOPIXEL=MCU_RGB ,

    ADXL_CS=MCU_ADXL345_CS , ADXL_SCLK=MCU_ADXL345_CLK , ADXL_MOSI=MCU_ADXL345_MOSI , ADXL_MISO=MCU_ADXL345_MISO ,


#------------------------------------------------------#
#     BTT EBB SB2209 CAN v1.0 RP2040 pins remapping    #
#------------------------------------------------------#

# These pins overrides are automatically added when you select a CANbus
# toolhead MCU during the installation process. They should provide a
# good base to work with. Feel free to adapt to your board if needed!

[extruder]
step_pin: toolhead:E_STEP
dir_pin: toolhead:E_DIR
enable_pin: !toolhead:E_ENABLE
heater_pin: toolhead:E_HEATER
sensor_pin: toolhead:E_TEMPERATURE
## For PT100/PT1000
# sensor_type: MAX31865
# sensor_pin: toolhead:MCU_31865_CS
# spi_software_sclk_pin: toolhead:MCU_31865_CLK
# spi_software_mosi_pin: toolhead:MCU_31865_MOSI
# spi_software_miso_pin: toolhead:MCU_31865_MISO
# rtd_nominal_r: 100
# rtd_reference_r: 430
# rtd_num_of_wires: 2

#[probe]
#pin: ^!toolhead:PROBE_INPUT

[fan]
pin: toolhead:PART_FAN

[heater_fan hotend_fan]
pin: toolhead:E_FAN

## Uncomment the following line if not using sensorless homing
## and having the X endstop plugged to the toolhead MCU
# [stepper_x]
# endstop_pin: ^toolhead:X_STOP

[neopixel status_leds]
pin: toolhead:STATUS_NEOPIXEL
#   The pin connected to the neopixel. This parameter must be provided.
chain_count: 3
#   The number of Neopixel chips that are "daisy chained" to the
#   provided pin. The default is 1 (which indicates only a single
#   Neopixel is connected to the pin).
color_order: GRBW
#   Set the pixel order required by the LED hardware. Options are GRB,
#   RGB, GRBW, or RGBW. The default is GRB.
initial_RED: 0.0
initial_GREEN: 0.0
initial_BLUE: 0.0
initial_WHITE: 1.0
#   Sets the initial LED color of the Neopixel. Each value should be
#   between 0.0 and 1.0. The WHITE option is only available on RGBW
#   LEDs. The default for each color is 0.#


[tmc2209 extruder]
uart_pin: toolhead:E_TMCUART


#-------------------------#
#   TMC Autotune          #
#-------------------------#

# MOTOR INFORMATION 2.4
# Z  LDO-42STH48-2004AC(VRN)  1.8 deg 2 amp 200 steps
# AB LDO-42STH48-2004MAH(VRN) 0.9 deg 2 amp 400 steps
# Extruder ldo-36sth17-1004ahg 200 steps

[tmc2209 stepper_z]
run_current: 1
#interpolate: False

[tmc2209 stepper_z1]
run_current: 1
#interpolate: False

[tmc2209 stepper_z2]
run_current: 1
#interpolate: False

[tmc2209 stepper_z3]
run_current: 1
#interpolate: False

[tmc2209 stepper_x]
run_current: 1
driver_SGTHRS: 122

[tmc2209 stepper_y]
run_current: 1
driver_SGTHRS: 140

[autotune_tmc stepper_x]
motor: ldo-42sth48-2004mah
sg4_thrs: 122

[autotune_tmc stepper_y]
motor: ldo-42sth48-2004mah
sg4_thrs: 140

[autotune_tmc stepper_z]
motor: ldo-42sth48-2004ac

[autotune_tmc stepper_z1]
motor: ldo-42sth48-2004ac

[autotune_tmc stepper_z2]
motor: ldo-42sth48-2004ac

[autotune_tmc stepper_z3]
motor: ldo-42sth48-2004ac

[autotune_tmc extruder]
motor: ldo-36sth20-1004ahg